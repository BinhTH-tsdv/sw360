<%--
  ~ Copyright Siemens AG, 2016-2019. Part of the SW360 Portal Project.
  ~
  ~ This program is free software; you can redistribute it and/or modify it under
  ~ the terms of the GNU General Public License Version 2.0 as published by the
  ~ Free Software Foundation with classpath exception.
  ~
  ~ This program is distributed in the hope that it will be useful, but WITHOUT
  ~ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  ~ FOR A PARTICULAR PURPOSE. See the GNU General Public License version 2.0 for
  ~ more details.
  ~
  ~ You should have received a copy of the GNU General Public License along with
  ~ this program (please see the COPYING file); if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
  ~ 02110-1301, USA.
  --%>

<portlet:resourceURL var="triggerSyncURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value='<%=PortalConstants.VM_SYNC_COMPONENTS%>'/>
</portlet:resourceURL>

<portlet:resourceURL var="triggerReverseMatchURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value='<%=PortalConstants.VM_REVERSE_MATCH%>'/>
</portlet:resourceURL>

<div id="processesTableDiv">
    <span class="pull-right">
        <input type="button" class="ignoreButton" id="triggerSyncButton" value="Trigger Sync">
        <input type="button" class="ignoreButton" id="triggerReverseMatchButton" value="Trigger Reverse Match">
    </span>
    <table id="processesTable" cellpadding="0" cellspacing="0" border="0" class="display">
        <tfoot>
        <tr>
            <th colspan="4"></th>
        </tr>
        </tfoot>
    </table>
</div>

<script type="text/javascript">
    require(['jquery', /* jquery-plugins */ 'datatables.net'], function ($) {
    var processesTable;

    $("#triggerSyncButton").on('click', triggerSync);
    $("#triggerReverseMatchButton").on('click', triggerReverseMatch);

    function createProcessesTable() {
        var result = [];
        <core_rt:forEach items="${vmProcessList}" var="vmProcess">
        result.push({
            "DT_RowId": "${vmProcess.id}",
            "0": "<sw360:out value="${vmProcess.elementType}"/>",
            "1": "<sw360:out value="${vmProcess.startDate}"/>",
            "2": "<sw360:out value="${vmProcess.endDate}"/>",
            "3": "<sw360:out value="${vmProcess.processingSeconds}"/>"
        });
        </core_rt:forEach>

        processesTable = $('#processesTable').dataTable({
            pagingType: "full_numbers",
            data: result,
            columns: [
                { "title": "Sync Type" },
                { "title": "Start Date" },
                { "title": "End Date" },
                { "title": "Processing Time in sec"}
            ]
        });
        $('#processesTable_filter').hide();
        $('#processesTable_first').hide();
        $('#processesTable_last').hide();
    }

    //This can not be document ready function as liferay definitions need to be loaded first
    $(window).on('load', function () {
        createProcessesTable();
    });

    function triggerSync() {
        if(confirm("Do you want to trigger Sync ? Please check before if nothing is in progress ...")) {
            $.ajax({
                type: 'POST',
                url: '<%=triggerSyncURL%>',
                cache: false,
                data: {},
                success: function (data) {
                    if(data.result == 'SUCCESS')
                        alert("SVM Sync triggered successfully!");
                    else {
                        alert("I could not trigger SVM Sync!");
                    }
                },
                error: function () {
                    alert("I could not trigger SVM Sync!");
                }
            });
        }
    }

    function triggerReverseMatch() {
        if(confirm("Do you want to trigger a Reverse Match ? Please check before if nothing is in progress ...")) {
            $.ajax({
                type: 'POST',
                url: '<%=triggerReverseMatchURL%>',
                cache: false,
                data: {},
                success: function (data) {
                    if(data.result == 'SUCCESS')
                        alert("Reverse Match triggered successfully!");
                    else {
                        alert("I could not trigger Reverse match!");
                    }
                },
                error: function () {
                    alert("I could not trigger Reverse match!");
                }
            });
        }
    }
    });

</script>
