/*
* Copyright BMW CarIT GmbH, 2022.
*
* This program and the accompanying materials are made
* available under the terms of the Eclipse Public License 2.0
* which is available at https://www.eclipse.org/legal/epl-2.0/
*
* SPDX-License-Identifier: EPL-2.0
*/

plugins {
    id 'org.eclipse.sw360.java-conventions'
}

subprojects {
    task deployWar (type: Copy) {
        from layout.buildDirectory.dir("libs")
        into project.hasProperty('deployDir') ? "${deployDir}/webapps" : "${rootProject.projectDir}/deploy/webapps"
        include "*.war"
        rename '(.*)-.*-SNAPSHOT(.*)', '$1$2'
    }

    task deployJar (type: Copy) {
        from layout.buildDirectory.dir("libs")
        into project.hasProperty('deployDir') ? "${deployDir}/jars" : "${rootProject.projectDir}/deploy/jars"
        include "*.jar"
        exclude "*-tests.jar"
    }
}

task cleanDeploy(type:Delete) {
   delete project.hasProperty('deployDir') ? "${deployDir}" : "${rootProject.projectDir}/deploy"
}

tasks.clean.dependsOn(tasks.cleanDeploy)

// Setup proxy dinamically if exists

task setHttpProxyFromEnv {
    def map = ['HTTP_PROXY': 'http', 'HTTPS_PROXY': 'https']
    for (e in System.getenv()) {
        def key = e.key.toUpperCase()
        if (key in map) {
            def base = map[key]
            def url = e.value.toURL()
            System.setProperty("${base}.proxyHost", url.host.toString())
            System.setProperty("${base}.proxyPort", url.port.toString())
        }
    }
}
build.dependsOn setHttpProxyFromEnv
